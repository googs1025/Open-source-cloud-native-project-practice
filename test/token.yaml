kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: admin
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
roleRef:
  # 绑定原来的集群角色 admin，也可以绑定其他自己创的角色，但是权限就不同
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: admin
    namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  # 自创的 admin 角色
  name: admin
  namespace: kube-system
  labels:
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
---
# 当 k8s 集群版本 >= 1.24, 需要自己创建 secret 并使用 annotations 绑定
#apiVersion: v1
#kind: Secret
#type: kubernetes.io/service-account-token
#metadata:
#  name: admin-secret
#  namespace: kube-system
#  annotations:
#    kubernetes.io/service-account.name: "admin"


# 从 serviceaccount 获取 secret token
# [root@VM-0-16-centos test]# kubectl apply -f token.yaml
# clusterrolebinding.rbac.authorization.k8s.io/admin unchanged
# serviceaccount/admin unchanged
# [root@VM-0-16-centos test]# kubectl get serviceaccounts -nkube-system | grep admin
# admin                                1         17m
# [root@VM-0-16-centos test]# kubectl describe serviceaccounts admin -nkube-system
# Name:                admin
# Namespace:           kube-system
# Labels:              addonmanager.kubernetes.io/mode=Reconcile
#                      kubernetes.io/cluster-service=true
# Annotations:         <none>
# Image pull secrets:  <none>
# Mountable secrets:   admin-token-vj8xl
# Tokens:              admin-token-vj8xl
# Events:              <none>
# [root@VM-0-16-centos test]# kubectl get secrets admin-token-vj8xl -nkube-system -o jsonpath='{.data.token}' | base64 --decode